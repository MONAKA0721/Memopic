<header>
  <%= link_to 'memopic', root_path, class: 'font-serif-sc text-5xl ml-4 md:ml-10 text-black' %>
  <span class="float-right mr-4 md:mr-12">使い方は<%= link_to 'こちら', howto_path, style: 'line-height: 69px;' %></span>
</header>
<% if user_signed_in? %>
  <div class="main-content">
    <div class="user-info">
      <%= current_user.nickname %>
      <%= link_to 'ログアウト', logout_path %>
    </div>
    <div class="album_form">
      <div class="wrapper-button-new-album">
        <button class="button-new-album">新しいアルバムを作成する</button>
      </div>
      <%= form_with(model: @album_form, url: albums_path, class: "form-new-album hidden md:block") do |form| %>
        <div id="album-name-input">
          <%= form.text_field :name, placeholder: 'アルバムのタイトルを追加', class: "input-new-album-title text-base md:text-2xl", autocomplete:"off", required: true %>
        </div>
        <h3 class="m-0 text-left ml-3">写真</h3>
        <div>
          <label class="file-label block">
            <span class="filelabel" title="ファイルを選択">
              <span style="color: orange">
                <i class="far fa-images fa-4x"></i>
              </span>
            </span>
            <%= form.file_field :pictures, multiple: true, accept: 'image/png,image/gif,image/jpeg', class: 'file-input', required: true %>
            <div class='file-count'>未選択</div>
          </label>
        </div>
        <div class="text-4xl">+</div>
        <h3 class="m-0 text-left ml-3">音楽</h3>
        <div class="border rounded-lg border-solid p-2 mb-3">
          <h4 class="m-0 text-left">◯ Spotify から選ぶ</h4>
          <% @playlists.each do |playlist| %>
            <%= image_tag playlist.images[2]["url"] %>
          <% end %>
          <h4 class="m-0 text-left">◯ 自分で入力する</h4>
          <%= form.text_field :playlist_name, placeholder: 'プレイリストのタイトルを追加', class: "input-new-playlist-name" %>
          <%= form.text_field :playlist_url, placeholder: 'プレイリストのURLを追加', class: "input-new-playlist-link" %>
        </div>
        <div class="right">
          <%= button_tag type: 'submit', class: "button-submit", data: { disable_with: "アップロード中" } do %>
            <i class="fas fa-cloud-upload-alt"></i>  アップロードする
          <% end %>
          <div class="progress-bar-container">
            <div class="progress-percentage">0%</div>
            <progress class="progress" max="100" value="0"></progress>
          </div>
        </div>

      <% end %>
    </div>
    <div id="map" class="md:mx-20 my-5 md:my-10"></div>
    <div class="albums text-center">
      <% @albums.zip(@thumbpics).each do |album, thumbpic| %>
        <%= render partial: "album" ,locals: {album: album, thumbpic: thumbpic} %>
      <% end %>
    </div>
  </div>
<% end %>
<script src="https://kit.fontawesome.com/81a1ab3943.js" crossorigin="anonymous"></script>
<script src="https://code.jquery.com/jquery-3.4.1.js"></script>
<script type="text/javascript">
  $(function () {
    $('.button-new-album').on('click', () => {
      $('.form-new-album').slideToggle(alertFunc);
    });
    function alertFunc(){
      if ($(this).css('display') != 'none') {
        $(".button-new-album").text("▲ 閉じる");
        $(".button-new-album").css('color', 'orange')
        $(".button-new-album").css('background', 'white')
      }else{
        $(".button-new-album").text("新しいアルバムを作成する");
        $(".button-new-album").css('color', '#fff')
        $(".button-new-album").css('background', 'linear-gradient(45deg, #FFC107 0%, #ff8b5f 100%)')
      }
    };
  });
</script>
<script type="text/javascript">
$(function () {
  $('.file-input').on('change', function (e) {
      let fileCount = $(this).get(0).files.length
      if(fileCount > 0){
        $('.file-count').text(String(fileCount) + '個の画像が選択されています');
      }else{
        $('.file-count').text('画像が選択されていません');
      }
    });
  });
</script>
<script>
  let map;
  let infowindow;
  const ICON_W = 100;
  const ICON_H = 100;
  const mapOptions = {
    center: {lat: 35.4093320, lng: 136.7566470},
      zoom: 6
  };

  function initMap() {
    infowindow = new google.maps.InfoWindow();
    map = new google.maps.Map(document.getElementById('map'), mapOptions);
    google.maps.event.addListener(map, "click", function() {infowindow.close();});

    gon.thumbpics_data.forEach(function(thumbpic_data){
      
      // ランダムな初期値
      let lat = Math.random() * (36 - 34) + 34;
      let lng = Math.random() * (140 - 132) + 132;
      // 緯度・経度があればそれを参照する
      if(thumbpic_data.lat){
        lat = thumbpic_data.lat;
      }
      if(thumbpic_data.lat){
        lng = thumbpic_data.lng;
      }

      const point = new google.maps.LatLng(lat, lng);
      const html = `
        <a href="albums/${ thumbpic_data.album_hash }">
          ${ thumbpic_data.album_name }
        </a>
      `
      createImgMarker(point, html, thumbpic_data.thumbpic_url);

      if(thumbpic_data.playlists.length > 0){
        let musicInfo = ``
        thumbpic_data.playlists.forEach(function(playlist){
          musicInfo += `
            <a href="${ playlist.url }">
              ${ playlist.name }
            </a><br>
          `
        });
        createMusicMarker(point, musicInfo);
      }
    });
  }

  function createImgMarker(latlng, html, uri) {
    const marker = new google.maps.Marker({
      position: latlng,
      map: map,
      icon: {
        url: uri,
        scaledSize : new google.maps.Size(ICON_W, ICON_H)
      }
    });
    google.maps.event.addListener(marker, "mouseover", function() {
      infowindow.setContent(html);
      infowindow.open(map, marker);
    });
    google.maps.event.addListener(marker, "click", function() {
      infowindow.setContent(html);
      infowindow.open(map, marker);
    });
  }

  function createMusicMarker(latlng, html) {
    const musicMarker = new google.maps.Marker({
      position: latlng,
      map: map,
      icon: {
        anchor: new google.maps.Point(- ICON_W*3/8 , ICON_H*9/8),
        url: '/assets/music_icon.png',
        scaledSize : new google.maps.Size(ICON_W/4, ICON_H/4)
      }
    });
    google.maps.event.addListener(musicMarker, "mouseover", function() {
      infowindow.setContent(html);
      infowindow.open(map, musicMarker);
    });
    google.maps.event.addListener(musicMarker, "click", function() {
      infowindow.setContent(html);
      infowindow.open(map, musicMarker);
    });
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%=ENV['GOOGLE_API_KEY']%>&callback=initMap" async defer></script>
