<h1 id="title">Memopic</h1>
<% if user_signed_in? %>
  <div class="main-content">
    <div class="user-info">
      <%= current_user.nickname %>
      <%= link_to 'ログアウト', logout_path %>
    </div>
    <div class="album_form">
      <div class="wrapper-button-new-album"><button class="button-new-album">新しいアルバムを作成する</button></div>
      <%= form_with(model: @album_form, url: albums_path, class: "form-new-album") do |form| %>
        <div id="album-name-input">
          <%= form.text_field :name, placeholder: 'タイトルを追加', class: "input-new-album-title", autocomplete:"off", required: true %>
        </div>

        <label class="file-label">
          <span class="filelabel" title="ファイルを選択">
            <span style="color:black">
              <i class="fas fa-plus-circle"></i>
            </span>
            <span style="color: orange">
              <i class="far fa-images fa-4x"></i>
            </span>
          </span>
          <%= form.file_field :pictures, multiple: true, accept: 'image/png,image/gif,image/jpeg', class: 'file-input', required: true %>
        </label>
        <span class='file-count'>画像が選択されていません</span>
        <div class="right">
          <%= button_tag type: 'submit', class: "button-submit", data: { disable_with: "アップロード中" } do %>
            <i class="fas fa-cloud-upload-alt"></i>  アップロードする
          <% end %>
          <div class="progress-bar-container">
            <div class="progress-percentage">0%</div>
            <progress class="progress" max="100" value="0"></progress>
          </div>
        </div>

      <% end %>
    </div>
    <div class="albums">
      <% @albums.zip(@thumbpics).each do |album, thumbpic| %>
        <%= render partial: "album" ,locals: {album: album, thumbpic: thumbpic} %>
      <% end %>
    </div>
  </div>
  <div id="map"></div>
<% end %>
<script src="https://kit.fontawesome.com/81a1ab3943.js" crossorigin="anonymous"></script>
<script src="https://code.jquery.com/jquery-3.4.1.js"></script>
<script type="text/javascript">
  $(function () {
    $('.button-new-album').on('click', () => {
      $('.form-new-album').slideToggle(alertFunc);
    });
    function alertFunc(){
      if ($(this).css('display') != 'none') {
        $(".button-new-album").text("▲ 閉じる");
        $(".button-new-album").css('color', 'orange')
        $(".button-new-album").css('background', 'white')
      }else{
        $(".button-new-album").text("新しいアルバムを作成する");
        $(".button-new-album").css('color', '#fff')
        $(".button-new-album").css('background', 'linear-gradient(45deg, #FFC107 0%, #ff8b5f 100%)')
      }
    };
  });
</script>
<script type="text/javascript">
$(function () {
  $('.file-input').on('change', function (e) {
      let fileCount = $(this).get(0).files.length
      if(fileCount > 0){
        $('.file-count').text(String(fileCount) + '個の画像が選択されています');
      }else{
        $('.file-count').text('画像が選択されていません');
      }
    });
  });
</script>
<script>
  let map;
  let infowindow;

  const mapOptions = {
    center: {lat: 35.4093320, lng: 136.7566470},
      zoom: 6
  };

  function initMap() {
    infowindow = new google.maps.InfoWindow();
    map = new google.maps.Map(document.getElementById('map'), mapOptions);
    google.maps.event.addListener(map, "click", function() {infowindow.close();});

    gon.thumbpics_data.forEach(function(thumbpic_data){
      const lat = Math.random() * (36 - 34) + 34;
      const lng = Math.random() * (140 - 132) + 132;
      const point = new google.maps.LatLng(lat, lng);
      const html = `
        <a href="albums/${ thumbpic_data.album_hash }">${ thumbpic_data.album_name }
          <br>
          <img src='${ thumbpic_data.thumbpic_url }' class="h-32" />
        </a>
      `
      create_maker(point, html);
    });
  }

  function create_maker(latlng, html) {
    const marker = new google.maps.Marker({ position: latlng, map: map });
    google.maps.event.addListener(marker, "mouseover", function() {
      infowindow.setContent(html);
      infowindow.open(map, marker);
    });
    google.maps.event.addListener(marker, "click", function() {
      infowindow.setContent(html);
      infowindow.open(map, marker);
    });
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%=ENV['GOOGLE_API_KEY']%>&callback=initMap" async defer></script>
